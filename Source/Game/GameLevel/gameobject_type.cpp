#include "stdafx.h"
#include "gameobject_type.h"
#include <unordered_map>
#include "../../Expansion/log.h"

std::unordered_map<GameobjectId, GameobjectType> gameobjectIdToType{
	{GAMEOBJECT_BABA, OBJECT_TYPE_CHARACTER},
	{GAMEOBJECT_KEKE, OBJECT_TYPE_CHARACTER},
	{GAMEOBJECT_ROBOT, OBJECT_TYPE_CHARACTER},

	{GAMEOBJECT_SKULL, OBJECT_TYPE_DIRECTIONAL},
	{GAMEOBJECT_CRAB, OBJECT_TYPE_DIRECTIONAL},
	{GAMEOBJECT_BOLT, OBJECT_TYPE_DIRECTIONAL},

	{GAMEOBJECT_WALL, OBJECT_TYPE_TILED},
	{GAMEOBJECT_WATER, OBJECT_TYPE_TILED},
	{GAMEOBJECT_LAVA, OBJECT_TYPE_TILED},
	{GAMEOBJECT_GRASS, OBJECT_TYPE_TILED},
	{GAMEOBJECT_BRICK, OBJECT_TYPE_TILED},
	{GAMEOBJECT_ICE, OBJECT_TYPE_TILED},
	{GAMEOBJECT_HEDGE, OBJECT_TYPE_TILED},
	{GAMEOBJECT_PIPE, OBJECT_TYPE_TILED},
	{GAMEOBJECT_BOG, OBJECT_TYPE_TILED},

	{GAMEOBJECT_ROCK, OBJECT_TYPE_STATIC},
	{GAMEOBJECT_FLAG, OBJECT_TYPE_STATIC},
	{GAMEOBJECT_TILE, OBJECT_TYPE_STATIC},
	{GAMEOBJECT_FLOWER, OBJECT_TYPE_STATIC},
	{GAMEOBJECT_JELLY, OBJECT_TYPE_STATIC},
	{GAMEOBJECT_ALGAE, OBJECT_TYPE_STATIC},
	{GAMEOBJECT_STAR, OBJECT_TYPE_STATIC},
	{GAMEOBJECT_LOVE, OBJECT_TYPE_STATIC},
	{GAMEOBJECT_PILLAR, OBJECT_TYPE_STATIC},
	{GAMEOBJECT_KEY, OBJECT_TYPE_STATIC},
	{GAMEOBJECT_DOOR, OBJECT_TYPE_STATIC},
	{GAMEOBJECT_BUBBLE, OBJECT_TYPE_STATIC},
	{GAMEOBJECT_CROSSED, OBJECT_TYPE_STATIC},
	{GAMEOBJECT_ROSE, OBJECT_TYPE_STATIC},
	{GAMEOBJECT_VIOLET, OBJECT_TYPE_STATIC},
	{GAMEOBJECT_COG, OBJECT_TYPE_STATIC},
	{GAMEOBJECT_REED, OBJECT_TYPE_STATIC},

	{GAMEOBJECT_TEXT_IS, OBJECT_TYPE_TEXT},
	{GAMEOBJECT_TEXT_AND, OBJECT_TYPE_TEXT},

	{GAMEOBJECT_TEXT_TEXT, OBJECT_TYPE_TEXT},
	{GAMEOBJECT_TEXT_BABA, OBJECT_TYPE_TEXT},
	{GAMEOBJECT_TEXT_WALL, OBJECT_TYPE_TEXT},
	{GAMEOBJECT_TEXT_FLAG, OBJECT_TYPE_TEXT},
	{GAMEOBJECT_TEXT_ROCK, OBJECT_TYPE_TEXT},
	{GAMEOBJECT_TEXT_WATER, OBJECT_TYPE_TEXT},
	{GAMEOBJECT_TEXT_SKULL, OBJECT_TYPE_TEXT},
	{GAMEOBJECT_TEXT_LAVA, OBJECT_TYPE_TEXT},
	{GAMEOBJECT_TEXT_GRASS, OBJECT_TYPE_TEXT},
	{GAMEOBJECT_TEXT_JELLY, OBJECT_TYPE_TEXT},
	{GAMEOBJECT_TEXT_ALGAE, OBJECT_TYPE_TEXT},
	{GAMEOBJECT_TEXT_CRAB, OBJECT_TYPE_TEXT},
	{GAMEOBJECT_TEXT_STAR, OBJECT_TYPE_TEXT},
	{GAMEOBJECT_TEXT_KEKE, OBJECT_TYPE_TEXT},
	{GAMEOBJECT_TEXT_LOVE, OBJECT_TYPE_TEXT},
	{GAMEOBJECT_TEXT_PILLAR, OBJECT_TYPE_TEXT},
	{GAMEOBJECT_TEXT_KEY, OBJECT_TYPE_TEXT},
	{GAMEOBJECT_TEXT_DOOR, OBJECT_TYPE_TEXT},
	{GAMEOBJECT_TEXT_HEDGE, OBJECT_TYPE_TEXT},
	{GAMEOBJECT_TEXT_ICE, OBJECT_TYPE_TEXT},
	{GAMEOBJECT_TEXT_ROSE, OBJECT_TYPE_TEXT},
	{GAMEOBJECT_TEXT_VIOLET, OBJECT_TYPE_TEXT},
	{GAMEOBJECT_TEXT_COG, OBJECT_TYPE_TEXT},
	{GAMEOBJECT_TEXT_PIPE, OBJECT_TYPE_TEXT},
	{GAMEOBJECT_TEXT_ROBOT, OBJECT_TYPE_TEXT},
	{GAMEOBJECT_TEXT_BOLT, OBJECT_TYPE_TEXT},
	{GAMEOBJECT_TEXT_BOG, OBJECT_TYPE_TEXT},

	{GAMEOBJECT_TEXT_YOU, OBJECT_TYPE_TEXT},
	{GAMEOBJECT_TEXT_PUSH, OBJECT_TYPE_TEXT},
	{GAMEOBJECT_TEXT_STOP, OBJECT_TYPE_TEXT},
	{GAMEOBJECT_TEXT_WIN, OBJECT_TYPE_TEXT},
	{GAMEOBJECT_TEXT_SINK, OBJECT_TYPE_TEXT},
	{GAMEOBJECT_TEXT_DEFEAT, OBJECT_TYPE_TEXT},
	{GAMEOBJECT_TEXT_HOT, OBJECT_TYPE_TEXT},
	{GAMEOBJECT_TEXT_MELT, OBJECT_TYPE_TEXT},
	{GAMEOBJECT_TEXT_SHUT, OBJECT_TYPE_TEXT},
	{GAMEOBJECT_TEXT_OPEN, OBJECT_TYPE_TEXT},
	{GAMEOBJECT_TEXT_MOVE, OBJECT_TYPE_TEXT},
	{GAMEOBJECT_TEXT_RED, OBJECT_TYPE_TEXT},
	{GAMEOBJECT_TEXT_BLUE, OBJECT_TYPE_TEXT},
	{GAMEOBJECT_TEXT_FLOAT, OBJECT_TYPE_TEXT},
};

int GetGameobjectTypeById(GameobjectId gameobjectId) {
	if (gameobjectIdToType.find(gameobjectId) == gameobjectIdToType.end()) {
		Log::LogError("%s didn't has gameobject type", GetGameobjectNameById(gameobjectId).c_str());
		return -1;
	}
	return gameobjectIdToType[gameobjectId];
}